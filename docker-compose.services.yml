# docker-compose.services.yml
# Configuration pour lancer auth-service et user-service ensemble
services:
  auth-db:
    image: postgres:15-alpine
    container_name: helpdesk-auth-db
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=pass
      - POSTGRES_DB=auth_db
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --locale=C
    volumes:
      - auth-db-data:/var/lib/postgresql/data
    ports:
      - "5401:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d auth_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - helpdesk-network

  # Base de donn√©es PostgreSQL pour user-service  
  user-db:
    image: postgres:15-alpine
    container_name: helpdesk-user-db
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=userpass
      - POSTGRES_DB=user_db
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --locale=C
    volumes:
      - user-db-data:/var/lib/postgresql/data
    ports:
      - "5402:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d user_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - helpdesk-network

  # Redis pour auth-service
  auth-redis:
    image: redis:7-alpine
    container_name: helpdesk-auth-redis
    command: redis-server --requirepass redispass
    ports:
      - "6301:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - helpdesk-network

  # Redis pour user-service
  user-redis:
    image: redis:7-alpine
    container_name: helpdesk-user-redis  
    command: redis-server --requirepass redispass
    ports:
      - "6302:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - helpdesk-network

  # Service d'authentification
  auth-service:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile
    container_name: helpdesk-auth-service
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DATABASE_URL=postgresql://user:pass@auth-db:5432/auth_db
      - REDIS_URL=redis://:redispass@auth-redis:6379
      - JWT_SECRET=eeyJhbGciOiJIUzI1NiJ9eyJSb2xlIjoiQWRtaW4iLCJJc3N1ZXIiOiJJc3N1ZXIiLCJVc2VybmFtZSI6IkphdmFJblVzZSIsImV4cCI6MTc1MzgxNzAwOCwiaWF0IjoxNzUzODE3MDA4fQ7FUll9vRaQmMwmFb6cBwciQN6J0VAZhG46UUtSwrY0
      - JWT_EXPIRES_IN=24h
      - REFRESH_TOKEN_EXPIRES_IN=7d
      - BCRYPT_ROUNDS=12
      - MAX_LOGIN_ATTEMPTS=5
      - LOCK_TIME=15
      - RATE_LIMIT_WINDOW_MS=900000
      - RATE_LIMIT_MAX_REQUESTS=100
      - CORS_ORIGIN=http://localhost:3000,http://localhost:3002
      - ENABLE_KAFKA=false
      - MOCK_EVENTS=true
    depends_on:
      auth-db:
        condition: service_healthy
      auth-redis:
        condition: service_healthy
    networks:
      - helpdesk-network
    restart: unless-stopped

  # Service utilisateur
  user-service:
    build:
      context: ./services/user-service
      dockerfile: Dockerfile
    container_name: helpdesk-user-service
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - PORT=3002
      - DATABASE_URL=postgresql://user:userpass@user-db:5432/user_db
      - REDIS_URL=redis://:redispass@user-redis:6379
      - AUTH_SERVICE_URL=http://auth-service:3001
      - AUTH_SERVICE_TIMEOUT=5000
      - FILE_SERVICE_URL=http://localhost:3004
      - ENABLE_FILE_SERVICE=false
      - MOCK_FILE_SERVICE=true
      - ENABLE_KAFKA=false
      - KAFKA_BROKERS=localhost:9092
      - UPLOAD_MAX_SIZE=5242880
      - CORS_ORIGIN=http://localhost:3000
      - LOG_LEVEL=info
    depends_on:
      user-db:
        condition: service_healthy
      user-redis:
        condition: service_healthy
      auth-service:
        condition: service_started
    networks:
      - helpdesk-network
    restart: unless-stopped

volumes:
  auth-db-data:
    driver: local
  user-db-data:
    driver: local

networks:
  helpdesk-network:
    driver: bridge
    name: helpdesk-network
